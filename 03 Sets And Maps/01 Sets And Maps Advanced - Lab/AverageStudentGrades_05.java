package com.company.SET_MAP;import java.util.*;public class AverageStudentGrades_05 {    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        int n = Integer.parseInt(scanner.nextLine());        Map<String, ArrayList<Double>> students = new TreeMap<>();        for (int i = 0; i < n; i++) {            String[] input = scanner.nextLine().split("\\s+");            String studentName = input[0];            double grade = Double.parseDouble(input[1]);            if (!students.containsKey(studentName)) {                students.put(studentName, new ArrayList<>());                students.get(studentName).add(grade);            } else {                students.get(studentName).add(grade);            }        }        students                .forEach((key, value) -> {                    System.out.print(key + " " + "->" + " ");                    value.forEach(e -> System.out.printf("%.2f ",e));                    System.out.printf("(avg: %.2f)%n"                            ,value.stream().mapToDouble(Double::doubleValue).average().orElse(0.0));                });        // ИМА И ДРУГО РЕШЕНИЕ ОТДОЛУ С ФОРЦИКЪЛ !    }}/*package com.company.SET_MAP;        import java.util.*;public class AverageStudentGrades_05 {    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        int n = Integer.parseInt(scanner.nextLine());        Map<String, List<Double>> students = new TreeMap<>();        for (int i = 0; i < n; i++) {            String[] input = scanner.nextLine().split("\\s+");            String studentName = input[0];            double grade = Double.parseDouble(input[1]);            if (!students.containsKey(studentName)) {                students.put(studentName, new ArrayList<>());                students.get(studentName).add(grade);            } else {                students.get(studentName).add(grade);            }        }        students.entrySet()                .stream()                .forEach(e -> {                    double sum = 0;                    for (int i = 0; i <e.getValue().size() ; i++) {                        sum += e.getValue().get(i);                    }                    double avgSum = sum / e.getValue().size();                    System.out.print(e.getKey() + " -> ");                    e.getValue().forEach( j -> System.out.printf("%.2f ",j));                    System.out.printf("(avg: %.2f)%n",avgSum);                });    }}*/