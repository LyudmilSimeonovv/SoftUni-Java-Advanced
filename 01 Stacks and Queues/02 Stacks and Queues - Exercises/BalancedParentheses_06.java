package com.company.Stekove_Opashki._exersises;import java.util.ArrayDeque;import java.util.Scanner;public class BalancedParentheses_06 {    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        String input = scanner.nextLine();        ArrayDeque<Character> openParentheses = new ArrayDeque<>();        ArrayDeque<Character> closeParentheses = new ArrayDeque<>();        for (int i = 0; i < input.length(); i++) {            char currentSymbol = input.charAt(i);            if (currentSymbol == '(' || currentSymbol == '[' || currentSymbol == '{' ) {                openParentheses.push(currentSymbol);            } else if (currentSymbol == ')' || currentSymbol == ']' || currentSymbol == '}' ) {                closeParentheses.offer(currentSymbol);            }        }        if (closeParentheses.size() != openParentheses.size()){            System.out.println("NO");            return;        }        int maxLenght = Math.max(openParentheses.size(), closeParentheses.size());            boolean isBalanced = true;        for (int i = 0; i < maxLenght; i++) {            char open = openParentheses.pop();            char close = closeParentheses.poll();            if (open == '(' && close != ')'){                isBalanced = false;            }else if (open == '[' && close != ']'){                isBalanced = false;            }else if (open == '{' && close != '}'){                isBalanced = false;            }        }        if (isBalanced){            System.out.println("YES");        }else {            System.out.println("NO");        }    }}