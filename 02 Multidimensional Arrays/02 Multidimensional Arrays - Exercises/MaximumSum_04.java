package com.company.MATRICI_EXERCISES;import java.util.Arrays;import java.util.Collections;import java.util.Scanner;public class MaximumSum_04 {    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        int[][] matrix = fillMatric(scanner);        int sum = Integer.MIN_VALUE;        int startRow = 0;        int startCol = 0;        for (int row = 0; row < matrix.length - 2; row++) {            for (int col = 0; col < matrix[row].length - 2; col++) {                int currentSum = matrix[row][col] + matrix[row][col + 1] + matrix[row][col + 2]                        + matrix[row + 1][col] + matrix[row + 1][col + 1] + matrix[row + 1][col + 2]                        + matrix[row + 2][col] + matrix[row + 2][col + 1] + matrix[row + 2][col + 2];                if (currentSum > sum) {                    sum = currentSum;                   startRow = row;                   startCol = col;                }            }        }        System.out.printf("Sum = %d%n",sum);        printMatrix(matrix, startRow, startCol);    }    public static void printMatrix(int[][] matrix, int startRow, int startCol) {        for (int row = startRow; row <= startRow + 2; row++) {            for (int col = startCol; col <= startCol + 2 ; col++) {                System.out.print(matrix[row][col] + " ");            }            System.out.println();        }    }    public static int[][] fillMatric(Scanner scanner) {        String[] input = scanner.nextLine().split("\\s+");        int rows = Integer.parseInt(input[0]);        int cols = Integer.parseInt(input[1]);        int[][] matrix = new int[rows][cols];        for (int row = 0; row < rows; row++) {            matrix[row] = Arrays.stream(scanner.nextLine().split("\\s+"))                    .mapToInt(Integer::parseInt).toArray();        }        return matrix;    }}