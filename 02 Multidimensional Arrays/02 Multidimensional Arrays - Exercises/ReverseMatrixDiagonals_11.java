package com.company.MATRICI_EXERCISES;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.nio.charset.StandardCharsets;import java.util.*;import java.util.stream.Collectors;public class ReverseMatrixDiagonals_11 {    public static void main(String[] args) throws IOException {        Scanner scanner = new Scanner(System.in);        int[] dimensions = Arrays.stream(scanner.nextLine().split("\\s+"))                .mapToInt(Integer::parseInt)                .toArray();        int row = dimensions[0];        int col = dimensions[1];        int[][] matrix = new int[row][col];        for (int i = 0; i < row; i++) {            matrix[i] = Arrays.stream(scanner.nextLine().split("\\s+"))                    .mapToInt(Integer::parseInt)                    .toArray();        }        row--;        col--;        while (row != -1) {            int r = row;            int c = col;            while (!isInbounds(r, c, matrix)) {                System.out.print(matrix[r--][c++] + " ");            }            System.out.println();            col--;            if (col < 0) {                col = 0;                row--;            }        }    }    private static boolean isInbounds(int row, int col, int[][] matrix) {        return row < 0 || col < 0 || row > matrix.length - 1 || col > matrix[0].length - 1;    }}