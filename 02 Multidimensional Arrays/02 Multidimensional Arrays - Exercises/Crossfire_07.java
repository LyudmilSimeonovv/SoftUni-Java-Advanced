package com.company.MATRICI_EXERCISES;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import java.util.Scanner;public class Crossfire_07 {    private static Object String;    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        String[] sizeMatrix = scanner.nextLine().split("\\s+");        int rows = Integer.parseInt(sizeMatrix[0]);        int cols = Integer.parseInt(sizeMatrix[1]);        int n = 1;        //String[][] matrix = new String[rows][cols];        List<List<Integer>> matrix = new ArrayList<>();        for (int row = 0; row < rows; row++) {            matrix.add(new ArrayList<>());            for (int col = 0; col < cols; col++) {                matrix.get(row).add(n++);            }        }        String command = scanner.nextLine();        while (!command.equals("Nuke it from orbit")) {            int rowNumber = Integer.parseInt(command.split("\\s+")[0]);            int colNumber = Integer.parseInt(command.split("\\s+")[1]);            int degrees = Integer.parseInt(command.split("\\s+")[2]);            for (int col = colNumber + degrees; col >= colNumber - degrees; col--) {                if (rowNumber >= 0 && rowNumber < matrix.size()                        && col >= 0 && col < matrix.get(rowNumber).size()) {                    matrix.get(rowNumber).remove(col);                }            }            for (int row = rowNumber + degrees; row >= rowNumber - degrees; row--) {                if (row >= 0 && row < matrix.size()                        && colNumber >= 0 && colNumber < matrix.get(row).size()) {                    if (row != rowNumber) {                        matrix.get(row).remove(colNumber);                    }                }            }            matrix.removeIf(List::isEmpty);            command = scanner.nextLine();        }        matrix.forEach(i -> {            i.forEach(j -> System.out.print(j + " "));            System.out.println();        });    }}